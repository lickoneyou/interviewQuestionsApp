const JSCORE = {
  'JS CORE': {
    'Типы данных JavaScript и структуры данных': {
      id: '51',
      jsx: (
        <div>
          <ul>
            <b>JavaScript</b> имеет <b>8</b> встроенных типов данных:
            <li>null</li>
            <li>undefined</li>
            <li>boolean</li>
            <li>number</li>
            <li>string</li>
            <li>object</li>
            <li>symbol</li>
            <li>BigInt</li>
          </ul>
          <p>Структуры данных:</p>
          <p>
            <b>Массивы</b> — используются для хранения коллекции элементов,
            таких как числа, строки или объекты.
          </p>
          <p>
            <b>Стек</b> — это структура данных, которая работает по принципу{' '}
            <b>LIFO (Last In, First Out)</b>, что означает{' '}
            <span>«последним пришёл — первым вышел»</span> (push / pop).
          </p>
          <p>
            <b>Очередь</b> — это структура данных, которая работает по принципу{' '}
            <b>FIFO (First In, First Out)</b>, что означает{' '}
            <span>«первым пришёл — первым ушел»</span> (shift).
          </p>
          <p>
            <b>Связанный список</b> — это структура данных, которая состоит из
            узлов, каждый из которых содержит данные и ссылку на следующий узел
            в списке.
          </p>
          <ul>
            Существуют два основных типа связанных списков:
            <li>
              <b>Односвязный список</b> — структура данных, состоящая из
              элементов одного типа, последовательно связанных между собой
              указателями. Каждый элемент списка имеет указатель на следующий
              элемент. Последний элемент ни на что не указывает. Элемент, на
              который нет указателя, является первым в списке
            </li>
            <li>
              <b>Двусвязный список</b> — структура данных, в которой каждый
              элемент содержит указатель на следующий и предыдущий элементы. Это
              позволяет двигаться по списку в обоих направлениях
            </li>
          </ul>
          <p>
            <b>Деревья</b> — это структура, которая состоит из связанных узлов.
            Каждый узел дерева содержит данные и ссылки на его дочерние узлы.
            Вершина дерева называется корнем, узлы у которых нет потомков —
            листьями.
          </p>
          <p>
            <b>Бинарное дерево</b> — это структура данных, в которой каждый узел
            имеет не более двух детей, обычно обозначаемых как «левый ребёнок» и
            «правый ребёнок».
          </p>
          <p>
            <b>Графы</b> - это структура данных, которая представляет собой
            узлы, связанные рёбрами.
          </p>
          <ul>
            Графы бывают:
            <li>
              <b>Направленные</b> - в направленном графе рёбра имеют направление
            </li>
            <li>
              <b>Ненаправленные</b> - в ненаправленном графе рёбра не имеют
              направления
            </li>
          </ul>
        </div>
      ),
    },
    'Var, let или const? Проблемы областей видимости переменных': {
      id: '52',
    },
    'Преобразование типов для примитивов': {
      id: '53',
    },
    'Операторы Сравнения': {
      id: '54',
    },
    'Логические операторы': {
      id: '55',
    },
    'Условное Ветвление: if ?': {
      id: '56',
    },
    'Циклы while и for': {
      id: '57',
    },
    'Конструкция "switch"': {
      id: '58',
    },
    Функции: {
      id: '59',
    },
    'try…catch': {
      id: '510',
    },
    'Строгий режим': {
      id: '511',
    },
    Массивы: {
      id: '512',
    },
    Объекты: {
      id: '513',
    },
    'Сборка Мусора': {
      id: '514',
    },
    This: {
      id: '515',
    },
    'Оператор new': {
      id: '516',
    },
    'Именованное функциональное выражение(Named Function Expression)': {
      id: '517',
    },
    Прототипы: {
      id: '518',
    },
    Классы: {
      id: '519',
    },
    'Асинхронный JavaScript': {
      id: '520',
    },
    Генераторы: {
      id: '521',
    },
    'Модули Иморт Экспорт': {
      id: '522',
    },
    'FetchAPI - Интерфейсывеб API, XMLHttpRequest': {
      id: '523',
    },
    Замыкания: {
      id: '524',
    },
    Рекурсия: {
      id: '525',
    },
  },
}

export default JSCORE
